// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.41'
    repositories {
        jcenter()
        maven { url 'https://maven.google.com' }
        maven { url 'https://maven.fabric.io/public' }
        google() // Google's Maven repository
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

ext {
    def supportVersion = "27.1.1"
    //android support
    support_recycler_view = "com.android.support:recyclerview-v7:$supportVersion"
    support_v4 = "com.android.support:support-v4:$supportVersion"
    appcompat = "com.android.support:appcompat-v7:$supportVersion"
    support_preference_v7 = "com.android.support:preference-v7:$supportVersion"
    support_preference_v14 = "com.android.support:preference-v14:$supportVersion"
    support_design = "com.android.support:design:$supportVersion"
    support_annotations = "com.android.support:support-annotations:$supportVersion"
    constraint_layout = 'com.android.support.constraint:constraint-layout:1.1.3'

    def lifecycleVersion = "1.1.1"
    archViewModel = "android.arch.lifecycle:viewmodel:$lifecycleVersion"
    archExtensions = "android.arch.lifecycle:extensions:$lifecycleVersion"

    support_palette = "com.android.support:palette-v7:$supportVersion"

    //google
    def daggerVersion = "2.19"
    dagger2 = "com.google.dagger:dagger:$daggerVersion"
    dagger2annotationProcessor = "com.google.dagger:dagger-compiler:$daggerVersion"
    dagger2android = "com.google.dagger:dagger-android:$daggerVersion"
    dagger2androidSupport = "com.google.dagger:dagger-android-support:$daggerVersion"
    dagger2androidAnnotationProcessor = "com.google.dagger:dagger-android-processor:$daggerVersion"
    dagger_spi = "com.google.dagger:dagger-spi:$daggerVersion"
    gson = 'com.google.code.gson:gson:2.2.4'

    google_auth = 'com.google.android.gms:play-services-auth:16.0.1'

    //rx
    rxjava2 = "io.reactivex.rxjava2:rxjava:2.2.7"
    rxandroid2 = "io.reactivex.rxjava2:rxandroid:2.1.1"

    // square / Jake Wharton
    picasso = 'com.squareup.picasso:picasso:2.5.2'
    retrofit = 'com.squareup.retrofit2:retrofit:2.6.0'
    //other
    jetbrains_annotations = 'org.jetbrains:annotations:13.0'
    kotlin_std_lib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    javax_inject = 'javax.inject:javax.inject:1'
    fb_sdk = 'com.facebook.android:facebook-android-sdk:4.26.0'
    vk_sdk = 'com.vk:androidsdk:2.1.0'
}

subprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.google.com/' }
        google() // Google's Maven repository
    }

    configurations {
        provided
    }

    tasks.withType(JavaCompile) {
        sourceCompatibility = "1.8"
        targetCompatibility = "1.8"
    }

    ext {
        compileSdkVersion = 28
        buildToolsVersion = "28.0.3"
        def propMinSdkVersion = 16
        minSdkVersion = propMinSdkVersion
        targetSdkVersion = 28
    }

    afterEvaluate {
        try {
            kapt {
                arguments {
                    arg("moduleName", project.name)
                }
            }
        }
        catch (Throwable ignored) {
        }
    }


    afterEvaluate {
        try {
            project.android {
                buildToolsVersion project.ext.buildToolsVersion
                defaultConfig {
                    minSdkVersion project.ext.minSdkVersion
                    compileSdkVersion project.ext.compileSdkVersion
                    targetSdkVersion project.ext.targetSdkVersion
                    renderscriptTargetApi 19
                    renderscriptSupportModeEnabled true
                }
                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_1_8
                    targetCompatibility JavaVersion.VERSION_1_8
                }
            }
        }
        catch (Throwable ignored) {
        }
    }
}

wrapper {
    gradleVersion = '5.1.1'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
